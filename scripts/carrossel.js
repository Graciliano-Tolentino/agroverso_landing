// ===========================================================================================
// üìú scripts/carrossel.js ‚Äî Carrossel Inteligente Agroverso
// üå± Transi√ß√£o autom√°tica, acessibilidade refinada, experi√™ncia regenerativa completa
// ===========================================================================================

(() => {
  document.addEventListener('DOMContentLoaded', () => {
    const carrosseis = document.querySelectorAll('.carrossel');

    if (!carrosseis.length) return;

    carrosseis.forEach((carrossel, indice) => {
      const slides = carrossel.querySelectorAll('img');
      if (slides.length <= 1) return;

      let indiceAtual = 0;
      const idCarrossel = `carrossel-${indice}`;
      let intervaloAuto = null;

      // üîñ Garante ID exclusivo
      if (!carrossel.id) carrossel.id = idCarrossel;

      // ========================================================================
      // Parte 2 ser√° enviada a seguir: gera√ß√£o din√¢mica de bot√µes com acessibilidade
      // ========================================================================

      // üéõÔ∏è Bot√£o "Anterior"
      const btnAnterior = document.createElement('button');
      btnAnterior.className = 'carrossel-controle carrossel-prev';
      btnAnterior.setAttribute('aria-label', 'Imagem anterior');
      btnAnterior.setAttribute('aria-controls', idCarrossel);
      btnAnterior.textContent = '‚Äπ';

      // üéõÔ∏è Bot√£o "Pr√≥ximo"
      const btnProximo = document.createElement('button');
      btnProximo.className = 'carrossel-controle carrossel-next';
      btnProximo.setAttribute('aria-label', 'Pr√≥xima imagem');
      btnProximo.setAttribute('aria-controls', idCarrossel);
      btnProximo.textContent = '‚Ä∫';

      // üìé Inser√ß√£o dos controles no DOM
      carrossel.append(btnAnterior, btnProximo);

      // üß† Fun√ß√£o para mostrar o slide atual com acessibilidade e beleza
      function mostrarSlide(indice) {
        slides.forEach((slide, i) => {
          const estaAtivo = i === indice;
          slide.classList.toggle('ativo', estaAtivo);
          slide.style.display = estaAtivo ? 'block' : 'none';
          slide.setAttribute('aria-hidden', !estaAtivo);
          slide.setAttribute('tabindex', estaAtivo ? '0' : '-1');
          slide.setAttribute('role', 'tabpanel');
          slide.setAttribute('aria-label', `Slide ${i + 1} de ${slides.length}`);
        });

        // üîç Move o foco para o slide atual se poss√≠vel
        slides[indice]?.focus?.();
      }
