// ============================================================================================
// üîê scripts/login.js ‚Äî Autentica√ß√£o JWT Real Agroverso
// ============================================================================================
// üåø MVP regenerativo autenticado via API REST com seguran√ßa de n√≠vel elevado
// üì° Integra√ß√£o direta com FastAPI, tokens JWT assinados, controle de perfil e expira√ß√£o
// üß† Prote√ß√£o contra falhas comuns, modulariza√ß√£o limpa, feedbacks visuais e sem√¢ntica pura
// üí° Refatorado com clareza e poder, pronto para produ√ß√£o e escalabilidade progressiva
// ============================================================================================

document.addEventListener("DOMContentLoaded", () => {
  const form = document.getElementById("form-login");
  if (!form) return console.error("‚ùå Formul√°rio de login n√£o encontrado no DOM.");

  const emailInput = document.getElementById("email");
  const senhaInput = document.getElementById("senha");
  const erroMsg = document.getElementById("erro-login");

  // üéØ Fun√ß√£o auxiliar para exibir mensagens de erro ao usu√°rio
  const mostrarErro = (mensagem) => {
    if (!erroMsg) return;
    erroMsg.textContent = mensagem;
    erroMsg.hidden = false;
    erroMsg.focus?.();
  };

  // ‚úÖ Valida√ß√£o dos campos de entrada antes do envio ao backend
  const validarCampos = () => {
    const email = emailInput?.value.trim();
    const senha = senhaInput?.value;

    if (!email || !senha) {
      mostrarErro("Todos os campos s√£o obrigat√≥rios.");
      return null;
    }

    if (!email.includes("@") || senha.length < 6) {
      mostrarErro("Formato de e-mail ou senha inv√°lido.");
      return null;
    }

    return { email, senha };
  };

  // ============================================================================================
  // üöÄ Envio dos dados de login para o backend FastAPI com autentica√ß√£o JWT
  // ============================================================================================
  form.addEventListener("submit", async (event) => {
    event.preventDefault();
    erroMsg.hidden = true;

    const dados = validarCampos();
    if (!dados) return;

    const { email, senha } = dados;

    try {
      const resposta = await fetch("/api/auth/login", {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ email, senha })
      });

      if (!resposta.ok) {
        if (resposta.status === 401) {
          mostrarErro("Credenciais inv√°lidas. Verifique e tente novamente.");
        } else if (resposta.status >= 500) {
          mostrarErro("Erro no servidor. Tente novamente em alguns instantes.");
        } else {
          mostrarErro(`Erro inesperado [${resposta.status}].`);
        }
        return;
      }

      const dadosAutenticados = await resposta.json();

      // üîê Armazenamento seguro do token e metadados de sess√£o
      localStorage.setItem("agro_token", dadosAutenticados.access_token);
      localStorage.setItem("agro_email", dadosAutenticados.email);
      localStorage.setItem("agro_perfil", dadosAutenticados.perfil);
      localStorage.setItem("agro_nome", dadosAutenticados.nome);

      // üïí Expira√ß√£o local tempor√°ria (client-side) para consist√™ncia de logout autom√°tico
      const expiraEm = Date.now() + 60 * 60 * 1000; // 1 hora
      localStorage.setItem("agro_expira", expiraEm.toString());

      console.info("‚úÖ Login realizado com sucesso. Perfil:", dadosAutenticados.perfil);

      // ========================================================================================
      // üß≠ Redirecionamento autom√°tico conforme o perfil recebido do backend
      // ========================================================================================
      const rotasPorPerfil = {
        admin: "dashboard-admin.html",
        administrador: "dashboard-admin.html",  // suporte a nomenclaturas alternativas
        gerente: "dashboard-gerente.html",
        lider: "dashboard-lider.html",
        tecnico: "dashboard-tecnico.html"
      };

      const rotaDestino = rotasPorPerfil[dadosAutenticados.perfil];

      if (!rotaDestino) {
        mostrarErro("Perfil n√£o reconhecido pelo sistema. Contate o suporte.");
        console.warn("‚ö†Ô∏è Perfil desconhecido recebido:", dadosAutenticados.perfil);
        return;
      }

      // üåê Redirecionamento efetivo
      window.location.href = rotaDestino;

    } catch (erro) {
      console.error("‚ùå Erro ao tentar autenticar usu√°rio:", erro);
      mostrarErro("Erro de conex√£o. Verifique sua internet ou tente mais tarde.");
    }
  });
});
